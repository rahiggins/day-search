seq: 15, article: Leg Man
    First recipe: Recipe Name not found

    Article contains a numbered list in its introductory text, which is
    interpreted as a recipe.

seq: 27, article: Ripples in a Finger Bowl
    Recipe Name not found

    Paragraph containing the ingredients list not recognized as an 
    ingredients list:
    "Garlic powder Lawry's seasoned salt 16 rib lamb chops."

seq: 30: article: EATING WELL; Advisories on Fish and the Pitfalls of Good Intent
    First recipe: A Compromise, but Not in Taste

    Author name (MARIAN BURROS) is its owm paragraph, rather than appended 
    to the paragraph preceding the recipe name.  Several paragraphs preceding
    the autohr name paragraph were skipped until a paragraph without terminal
    puncuation was encountered (A Compromise, but Not in Taste), which was
    taken as the recipe name.

seq: 49, article: Dusk of the Drummer
    empty

    No recipe markers

seq: 53, article: Generation Pad Thai
    First recipe: Recipe Name not found

    Article contains a numbered list in its introductory text, which is
    interpreted as a recipe.

seq: 60, article: Free Ranging
    First recipe: Recipe Name not found
    Should be: Japanese-Style White Rice

    No ingrdients list

seq: 83, article: Now Serving: Bar Necessities
    First recipe: MAKES 24 SERVINGS.

    In para() MAKES 24 SERVINGS. does not set skip as true because it's 
        all caps, but it does set allCAPS to true, so it is taken as the
        recipe name

seq: 95; article: The Family Ticket; 1/2 Ounce Of Grenadine Makes A Kiddie Cocktail
    empty

    No recipe markers

seq: 115, article: Citrus Maximus
    First recipe missed

    minority recipe marker

    Second recipe missed

    No recipe marker - 'Makes * cup.', a numeral does not follow 'Makes'

    Fourth recipe:
    Hazelnut-Lemon-Ricotta Pancakes This recipe fuses the lemon-ricotta pancakes at the Four Seasons with the hazelnut waffles at Balthazar. I

    Text interposed between the recipe name and the ingredients list that 
        did not end with terminal punctuation

seq: 126, article: On a Pleasure Cruise
    empty

    No recipe marker

seq: 133, article: Eat, Memory: The Sixth Sense
    (Shrimp and Garlic)

    Second recipe name fragmented, but the first fragment was included in the
        paragraph preceding the recipe.  So the recipe name consisted of
        only the second fragment.

seq: 142, article: Eat, Memory: Line of Sight
    second recipe missed

    No recipe marker

seq: 143, article: Fruit Cocktail Season
    empty 

    No recipe marker


seq: 145, article: THE MINIMALIST; The Love for 50 Cloves of Garlic
    First recipe: Recipe Name not found

    Ingredients list in one paragraph, '40 or more cloves' not recognized
        as an ingredient, no ingredients found and recipe name not accumulated



seq: 151,  article: The Way We Eat; Raising the Tapas Bar
    First recipe: Recipe Name not found

    No ingredients list or numbered instruction steps


seq: 152, article: In Mint Condition
    empty

    No recipe marker

seq: 161, article: The Arsenal
    First recipe: Recipe Name not found
    Second recipe: Recipe name followed by text

    For both recipes, Recipe name is followed by text ending in teminal punctuation, so the
    recipe name paragraph is skipped.

    First recipe, the parse continues to the the beginning of the article, 
    so recipe name not found.

    Second recipe, the preceding paragraph contains endOfRecipe, so
    entire subsequent, recipe name paragraph is taken as the recipe name.

seq: 162, article: Bourbonade
    empty

    No paragraph with recipe name

Seq: 171,  Article: On a Beach in Chelsea
    empty

    No recipe marker

Seq: 177,  Article: Free Ranging
    First recipe: Recipe Name not found

    endOfRecipe marker paragraph also contains ingedients and steps, so
    igredients not found

    Third recipe: missed

    Disparate recipe markers understated the number of recipes

Seq: 181,  Article: Surprise, Straight Up
    empty

    No recipe marker

Seq: 184,  Article: THE MINIMALIST; In a Stockpot, Home Brew Beats Store-Bought
    First recipe: Recipe Name not found

    Ingredients list in a separate paragraph, 8 ingredient matches but only
    2 include a unit of measure, so ingredientFound is false and recipe
    name paragraph is passed over.
    Ingredients match result: 1 unpeeled ,1 celery ,2 or ,3 unpeeled ,10 to ,20 parsley ,2 tablespoons ,1 tablespoon 
    
Seq: 187,  Article: A Poor Man's Porcini, in a Silly Hat
    First recipe: article name

    The paragraph preceding the recipe name paragraph consists of the 
    author name.  This paragraph is discarded and the accumRecipeName
    array is emptied.  Because the accumRecipeName array is empty, the 
    each preceding paragraph is skipped until the article name is taken
    as the recipe name.

Seq: 191,  Article: Kitchen Voyeur: Kitchen Sage
    First recipe: missed

    No recipe marker

Seq: 195,  Article: The Way We Eat: Kings of Convenience
    Second recipe: Recipe name followed by ingredients list

    Recipe name For the _: ingredients list

    For the _: ingredients list

    The 'For the _:' paragraph sets ingredientFound to true and therefore
    the 'Recipe name' paragraph is not examined for ingredients or capitalized
    words preceding ingredients.

Seq: 200,  Article: South France, With a Kick
    empty

    No recipe markers

Seq: 203,  Article: The Minimalist; For Summer Baking, Take the Top Down
    Second recipe: recipe name 'Crust'

    Ingredients list in a separate paragraph, which begins with
    'Crust from Simple Berry Tart recipe, ...'. Paragraph trimmed at
    'from' and 'Crust ' added to accumRecipeName. 'Crust '.split(' ')
    yields an array with 2 elements and so 'Crust' is not discarded.

Seq: 206,  Article: Apple Pie, Fourth of July And Pad Thai
    First recipe: missed

    No recipe marker

    Spurious thrid recipe: Instruction step

    Two recipe steps marked with '1. '. The second one belongs the the first,
    missed recipe, but was taken as a recipe as itself, possibly due to walk
    back.

Seq: 209,  Article: Kitchen Voyeur: Chow Hound
    First recipe: Article name

    Recipe structure:

        1 Recipe name 'For the _:' ingredients list

        2 'For the _:' ingredients list

        3 instruction step (demarcation)

    2 'For the _:' paragraph sets ingredientsFound to true, so 
    1 Recipe name 'For the _:' is not checked for ingredients, but instead
    is discarded for terminal puntuation.  Discard for terminal punctuation
    continues to the beginning of the article, and the article name is used
    for the recipe name.

Seq: 210,  Article: Sherif May Like It
    empty

    No recipe marker

Seq: 214,  Article: The Way We Eat: Buried Treasure
    First recipe, second recipe: <recipe name> Salt

    Recipe name paragraph: <recipe name> Salt <numerated ingredient>

    No lower-case word follows 'Salt', so 'Salt' included in recipe name.

Seq: 219,  Article: Free Ranging
    Second recipe: <recipe name> Salt

    Recipe name paragraph: <recipe name> Salt <numerated ingredient>

    No lower-case word follows 'Salt', so 'Salt' included in recipe name.

Seq: 220,  Article: Flute Meets Fruit
    empty

    No recipe marker

Seq: 223,  Article: The Minimalist; A Labor Of Spring
    Recipe Name not found

    Ingredients list in one paragraph â€” numerous numerals, but few units
    of measure,  so ingredients not found, and recipe name paragraph 
    skipped over.

Seq: 234,  Article: The Way We Eat: Building a Modern, Multistoried Dessert
    <recipe name> <ingredients list>

    Recipe structure:

        1 Recipe name 'For the _:' <ingredients list>

        2 'For the _ _ _:' <ingredients list>

        3 'For the _ _ _:' <ingredients list>

        4 instruction step (demarcation)
        
    3 'For the _:' paragraph sets ingredientsFound to true.
    2 'For the _ _ _:' paragraph discarded
    1 Recipe name 'For the _:' <ingredients list>, no terminal punctuation

    1 'For the _:' not at the beginning of the paragraph, so not considered
    and 1 is used as recipe name.
    
Seq: 235,  Article: The Minimalist vs. The Chef; A Passage to India, With Ease
    Last recipe missed

    Last recipe in the same paragraph as the instruction steps and end-of-recipe
    marker for the penultimate recipe.  Last recipe has no end-of-recipe marker.

Seq: 236,  Article: The Cheat: So You Still Can't Get a Reservation at Babbo?
    Second recipe missed

    Disparate recipe markers understated the number of recipes
        1st recipe has only inst
        2nd recipe has only endOfRecipe
        3rd recipe has instr and endOfRecipe

        instr chosen, skipping 2nd recipe

Seq: 237,  Article: Here's to Mom. And Dad.
    empty

    No recipe marker

Seq: 242,  Article: Pit Stop
    Recipe missed

    endOfRecipe marker immediately follows recipe name; parse starts at the 
    paragraph preceding the recipe name

Seq: 243,  Article: Bright Young Things
    First recipe: first instruction step

    demarcation: instr

    The paragraph preceding the the first instruction step, which contains the
    recipe name, contains an endOfRecipe marker and so is not checked for an
    ingredients list, which might have discovered the recipe name. The paragraph  
    also has terminal punctuation, which causes the first instruction step to be
    taken as the recipe name.

Seq: 246, Article: The NoHo Corral
    empty

    No recipe marker

Seq: 249,  Article: A Real Drinking Bar
    empty

    No recipe marker

Seq: 254,  Article: The Way We Eat: Mini-Pearl
    Second recipe: missed

    No recipe marker

    4th recipe: Recipe name followed by ingredients list and instructions and
    terminal puncuation.

    Recipe name paragraph skipped because of terminal punct.  preceding paragraph
    has endOfRecipe, so subsequent paragraph taken as recipe name.

Seq: 259,  Article: It's Spring. Line 'Em Up.
    First recipe missed

    No recipe marker

Seq: 263,  Article: Free Ranging
    First recipe: Recipe Name not found

    Recipe name, instructions and recipe marker in same paragraph, so recipe name
    not found

    Second recipe: <recipe name> <ingredients list>

    Ingredients list starts with "Olive oil 1 3/4 pounds wild ...". Paragraph is
    sliced at "1 3/4".  Last word of remaining text is uncapitalized, so paragrapgh
    is discarded.  preceding paragraph ends with terminal punct, so entire
    subsequent paragraph is taken as the recipe name.

    Forth recipe: <recipe name> <ingredients list>

    Ingredients list starts with "Juice of 2 lemons ...". Paragraph is
    sliced at "2", and "Juice of" is taken as part of the recipe name.

Seq: 268,  Article: The Arsenal
    First recipe: Recipe Name not found

    <recipe name> <ingredients list>
    Ingredients list not recognized because 2 of 3 ingredients are of the form:
    \d \noun
    e.g. 1 lemon, not \d \UOM
    Paragraph ends with terminal punct, so skipped.  preceding paragraph has
    no ingredients list and ends with terminal punct so skipped, and is the
    first paragraph of the article, so recipe name not found.

Seq: 269,  Article: Floating on the Deep Blue
    empty

    No recipe marker

Seq: 277,  Article: Eat, Memory: The Absolutely No-Anything Diet
    First recipe: Recipe Name not found

    <recipe name> <ingredients list>
    Bullshit ingredients list - 1 ingredient out of 4 quantities

Seq: 278,  Article: The Sipping Point
    First recipe: Recipe Name not found

    Recipe name, ingredients list, instructions and recipe marker in same paragraph,
    so recipe name not found

Seq: 279,  Article: The Mantry
    First recipe: Recipe Name not found
    Second recipe: Preheat

    In both cases: <recipe name> <endOfRecipe>

    First recipe, scan goes to first article paragraph looking for ingredients
        list
    
    Second recipe: preceding paragraph contains ingredients list, text preceding
        list taken as recipe name

Seq: 281,  Article: Turning Back a Page
    empty
    
    No recipe marker

Seq: 288,  Article: The Way We Eat: Tex Macs
    First recipe: Recipe Name not found

    Recipe name, instructions and recipe marker in same paragraph, so recipe name
    not found (parse reached top of article).

    Second recipe: <recipe name> <instructions and recipe marker>

    Recipe name, instructions and recipe marker in same paragraph, preceding paragraph
    contains endOfRecipe marker, so paragraph subsequent to it taken as recipe name.

Seq: 289,  Article: Warm-Up Act
    empty

    No recipe marker

Seq: 298,  Article: Sweet Deceit
    empty

    No recipe marker

Seq: 303,  Article: The Arsenal
    First recipe: Recipe Name not found

    Recipe name, instructions and recipe marker in same paragraph, so recipe name
    not found (parse reached top of article).

Seq: 308,  Article: Raspberried in the Snow
    empty

    No recipe marker

Seq: 323,  Article: Free Ranging
    Second recipe: <recipe name> <ingredients list>
    Third recipe: missed

    Second recipe has no recipe marker, so only 2 recipes expected.  
    First recipe processed correctly.
    Second recipe parse starts with paragraph containing the third recipe name
    followed by an ingredients list. Third recipe name correctly extracted from
    this paragraph and added to accumRecipeName.
    The next (preceeding) paragraph parsed: 'Adapted from David Pasternack, chef at Esca.'
    is not modified by adjustParaText.  Because p.adapted is true, recipeParse empties
    accumRecipeName and continues.
    The next (preceeding) paragraph parsed: 'Pickled Jerusalem Artichokes 3 cups water ...'
    is skipped due to terminal punctuation.
    The next (preceeding) paragraph parsed: '2. Pass the artichokes and potatoes ... Serves 4.'
    has endOfRecipe marker, so parse backs up to 'Pickled Jerusalem Artichokes 3 cups water ...'
    and takes the entire paragraph as the recipe name. 

Seq: 324,  Article: Eat, Memory: Michelin Man
    empty

    No recipe marker

Seq: 331,  Article: The Arsenal
    First recipe: <recipe name> <ingrdients>

    Recipe name paragraph includes some ingredients, but the subsequent paragraph,
    parse before the recipe name paragraph also contains ingredients, so the 
    recipe name paragraph is not checked for ingredients.

    Second recipe: missed

    No recipe marker 

    Third recipe: <recipe name> <ingrdients>

    Same cause as the first recipe

Seq: 332,  Article: At My Table; Take That, Dr. Atkins: Double Carbs
    Second recipe: <recipe name> Salt

    Ingredients is separate <p> elements.  First ingredient is unquantified and
    so is appended to the recipe name

Seq: 334,  Article: Party Politic
    First recipe: Text - a paragraph preceding the recipe name

    The recipe's last paragraph is 'Serves 10.'  This is taken as a servesMakes
    marker, rather than endOfRecipe, and the demarcation is set to servesMakes.  
    The recipe name paragraph includes a 'For the _' phrase and an ingredients list,
    ending with terminal punctuation.  Because the demarcation is servesMakes,
    ingedientsFound is immediately set to true, and therefore the recipe name
    paragrapgh is not checked for ingredients and is skipped because of its 
    termainal punctuation.  Eventually, the parse settles on a paragrapgh in 
    the article text.

Seq: 335,  Article: A Bloody Mary, Squared
    Second recipe: <recipe name> (for six cocktails)

    Excise '(for _)' phrases?

Seq: 345,  Article: The Arsenal
    First recipe: <article name>

    The recipe's last paragraph is 'Serves 6. Adapted from Dorie Greenspan.'  
    This is taken as a servesMakes marker, rather than endOfRecipe, and the
    demarcation is set to servesMakes.  
    The recipe name paragraph includes an ingredients list,
    ending with terminal punctuation.  Because the demarcation is servesMakes,
    ingedientsFound is immediately set to true, and therefore the recipe name
    paragrapgh is not checked for ingredients and is skipped because of its 
    termainal punctuation. The parse continues to the start of the article,
    and the article name is taken as the recipe name.

Seq: 346,  Article: Orpheus Ascending
    empty

    No recipe markers

Seq: 356,  Article: Chow for Now
    first recipe: Recipe Name not found

    All ingredients unquantified, so ingredients never found, so parse walks back 
    to the beginning of the article, so recipe name not found

    Second and third recipes: first recipe name

    Second and third recipe names are prepended to accumRecipeName, but the next
    paragraph examines: 'Adapted from "Marcella says . . . "' is set to null by
    function adjustParaText. Therefore accumRecipeName is reset. The parse continues
    walking back and settles on the first recipe name.

Seq: 369,  Article: The Gift; Seasoned Greetings
    First recipe missed

    No recipe marker

    All recipes: Recipe name preceded by primary ingredient name

Seq: 371,  Article: Laissez Fare
    First recipe: Recipe Name not found

    Recipe name paragraph truncated at 'Adapted', but recipe name name ends
    with terminal punct, so skipped

    Third recipe: an ingredient

    Recipe name is followed by 'Serves 8', therefore isEndOfRecipe is true, and
    parse backs up to the prior paragraph, an ingredient.

Seq: 372,  Article: The Dish; Haute Potato
    First recipe: <recipe name> 'serves 6'

    Recipe name paragraph includes 'serves 6'

Seq: 373,  Article: The Remix; One-Two Punch
    First recipe: empty

    Recipe name, ingredients and instructions all in one paragraph

Seq: 374,  Article: Cookie Master
    Both recipes: <recipe name> 'MAKES ABOUT ...'

    function adjustParaText does not truncate at [SERVES|MAKES]


Seq: 392,  Article: The Taste of Right Here
    First recipe: ZZ

    Recipe name <p> element has the form:
    <p>
    ZZ Packer is ...
    <br>
    <recipe name>
    <br>
    [serves 6]
    <br>
    ingredient
    <br>
    ingredient
    <br>
    ...
    </p>

    ZZ taken as recipe name

Seq: 408,  Article: The Land Down Under
    Second recipe: <last instruction step of first recipe> <recipe name>

    Article <p> elements comprise multiple items (recipe name, ingredients,
    instructions) separated by <br> elements. (Likewise for Seq: 392 above.)

    In this case, the <p> element containing the second recipe name has the form:

    <p>
    <last instruction step of the first recipe>
    <br>
    <second recipe name>
    <br>
    [serves 4]
    <br>
    <ingredient>
    <br>
    ...
    </p>

    If <p> element contains <br> elements, look for <strong class="css-8qgvsz ebyp5n10">
    elements to get recipe name?

Seq: 429,  Article: STYLE & ENTERTAINING; Screen Gems
    Second recipe: missed

    No recipe marker, but
    [makes n ...] and
    [yields abour n ...]

Seq: 430,  Article: SHAKEN AND STIRRED; Party Spirits
    First recipe: empty

    No recipe marker

Seq: 441,  Article: EATING WELL; It's Better to Be Whole Than Refined
    Article has 2 recipes, both of which were correctly identified. But 
    function findRecipes returned 3 recipe markers of type endOfRecipe.  The
    second instruction step of the second recipe was displayed as the 
    third recipe.

    The first instruction step of the 2nd recipe contains 'Makes about 3 cups.',
    which was taken as an endOfRecipe marker.  'Yield: ...' at the end of the
    the second recipe was taken as another endOfRecipe marker.

Seq: 445,  Article: FOOD; Athens on 5,000 Calories a Day
    All 3 recipes missed, other <p> elements displayed instead

    Recipes embedded in lists of ingredient-like <p> elements

Seq: 455,  Article: FOOD; The Fisher King
    First recipe: 'Bass With Truffle', instead of 'Bass With Truffle Vinaigrette'

    Fragmented title, second fragment, 'Vinaigrette', discarded because it's one word

Seq: 471,  Article: SHAKEN AND STIRRED; Fruity Fizz for Adults
    First recipe: empty

    No recipe markers

Seq: 482,  Article: No Bams, No Tricks, Just Food and a City
    text <recipe name>

    Last text paragraph before the recipe name paragraph ends with .'"
    The terminal puncuation is not detected, and the text (truncated at "from the
    Domincan") is prepended to accumRecipeName.

    function adjustParaText should allow for doubled quoting characters.

Seq: 490,  Article: SHAKEN AND STIRRED; Hammock in a Glass
    Recipe: empty

    No recipe marker

Seq: 505,  Article: Mustard Isn't So Yellow Anymore
    First recipe: empty

    Article does not include recipe.  Recipe is in a separate page.

Seq: 510,  Article: STYLE; Design Language
    First recipe: 'Recipe Name not found'

    Numbered list in article text

Seq: 515,  Article: STYLE; Tonic Youth
    First recipe: empty

    No recipe marker

Seq: 520,  Article: STYLE & ENTERTAINING; The World Is Their Oyster Bar
    First recipe: text <recipe name>

    Last text paragraph before the recipe name paragraph ends with ?'"
    The terminal puncuation is not detected, and the text (truncated at "from breakfast 
    to bouillabaisse") is prepended to accumRecipeName.

    function adjustParaText should allow for doubled quoting characters.

Seq: 539,  Article: It Happened One Saturday Night
    First, third and forth recipes: text <recipe name>

    Recipe name preceded by a paragraph containing an article-specific label that
    doesn't end with termainal punctuation.

Seq: 540,  Article: 20's Something
    First recipe: Recipe Name not found

    Recipe name, 1920's GINGER-ALE SALAD, is characterized as isNum: true
    and so is considered an ingredient.  Function recipeParse walks backward to
    the beginning of the article, so 'Recipe Name not found'.

Seq: 554,  Article: SHAKEN AND STIRRED; Pan-Asian Experience
    First recipe: empty

    No recipe marker

Seq: 603,  Article: SHAKEN AND STIRRED; Apple With Attitude
    First recipe: empty

    No recipe markers

Seq: 631,  Article: SHAKEN AND STIRRED; Some Enchanted Evening
    First recipe: empty

    No recipe marker

Seq: 647,  2003-11-02 Article: TV Dinners
    First recipe <recipe name> (cream of

    CRÃˆME DE LA GRAND' TANTE
    (cream of
    cauliflower soup)

    "Last word of last element is lowercase, last element deleted"

Seq: 650,  2003-11-02 Article: Eating Their Words
    First and second recipes: text <recipe name>

    Recipe name preceded by a paragraph(s) containing an article-specific label that
    doesn't end with termainal punctuation.

Seq: 695,  2003-09-07 Article: EDITORS' CHOICE: FOOD; Bread Alert
    First recipe: Recipe name truncated

    The recipe name comprises 3 fragments.  The last fragment consists
    of one word, and was therefore discarded by function joinAccumRecipeName.

Seq: 704,  2003-08-24 Article: Food; Tip of the Iceberg
    Third recipe: text

    Demarcation is endOfRecipe.  The single instruction step is unnumbered
    and contains quantified ingredients.  Function adjustParaText interprets 
    it as an ingredients list preceded by a recipe name.  The lowercase word
    check isolates the first, capitalized word of the paragraph, which is
    prepended to accumRecipeName.  The next paragraph examined, the last
    ingredient, ends with terminal puncutation, so the contents of 
    accumRecipeName is taken as the recipe name.

Seq: 713,  2003-08-10 Article: FOOTNOTES
    First recipe: Recipe Name not found

    Article starts with a non-recipe numbered list

Seq: 814,  2003-04-02 Article: TEMPTATIONS; A Duet of Puddings, Playing Taste Notes That Tease
    Second recipe: 'Place', first word of instructions paragraph

    Demarcation is endOfRecipe. Instructions are in one unnumbered paragraph. 
    Function adjustParaText checks paragraphs for ingredients without first
    identifying instructions.  In this case, the instructions paragraph
    contains 2 instances of '1/4 cup' and so was taken as ingredients.
    The word preceding the first '1/4 cup' was prepended to accumRecipeName. 
    
    The next paragraph examined was an ingredient that ended with terminal
    punctuation. The terminal punctuation ended the recipe name scan, and
    the value in accumRecipeName was taken as the recipe name.

Seq: 820,  2003-03-23 Article: FOOD; The Comeback Kid
    First recipe: 'Burnt' Passion- Fruit Curd

    Fragment title split between 'Passion-' and 'Fruit'
    Function joinAccumRecipeName introduces a space between fragments when
    joining them.  Is it possible to avoid introducing, or eliminate, a 
    blank following a hyphen?

Seq: 836,  2003-03-02 Article: SHAKEN AND STIRRED; New Before Its Time
    First recipe: empty

    No recipe marker

Seq: 840,  2003-02-19 Article: The Dough
    First and second recipes: Recipe Name not found

    Two numbered lists, no recipe name
    Use article title as recipe name?

Seq: 841,  2003-02-19 Article: Margherita and PissaladiÃ¨re
    Second recipe: skipped

    No recipe marker, <recipe name> is included in the last instruction step
    paragraph of the first recipe

Seq: 842,  2003-02-19 Article: Focaccia and Calzone
    Recipes: empty

    No recipe markers

Seq: 855,  2003-02-02 Article: FOOD; Pump It Up
    First recipe: <recipe name> ingredient

    First 2 ingredients are unquantified. Both are prepended to accumRecipeName.
    Function joinAccumRecipeName drops the last of the 2 ingredients because
    its last word is lowercase.  It does not consider the first ingredient,
    which is appended to the recipe name.

Seq: 871,  2003-01-12 Article: FOOD; Lox, Stock and Barrels
    First and second recipes: Last word of recipe names missing

    Both recipes have fragmented titles, and the last fragment consists
    of one word. Function joinAccumRecipeName drops the last fragment when
    it that fragment is one word.

Seq: 889,  2002-12-18 Article: In a Lebanese Valley, A Star Chef's Tour
    First recipe: text <recipe name>

    The text paragraph parsed after the recipe name paragraph ends with
    'ERIC ASIMOV', which is not the author name.  Since there is no terminal
    punctuation, the text paragraph is prepended to the recipe name.

Seq: 901,  2002-12-08 Article: SHAKEN AND STIRRED; Corporate Greenery
    First recipe: empty

    No recipe marker

Seq: 912,  2002-11-24 Article: FOOD; Parlez-Vous Turkey?
    Second recipe: Recipe name truncated

    The recipe name comprises 2 fragments.  The last fragment consists
    of one word, and was therefore discarded by function joinAccumRecipeName. 

Seq: 955,  2002-10-13 Article: FOOD; Turning Green
    hasUnquantifiedIngredient incorrect set

    First recipe ingredient: 'l large clove garlic, put through a press'
    starts with a lowercase l instead of a numeral 1

Seq: 962,  2002-10-06 Article: STYLE & ENTERTAINING; Whiskey Ã€ Go-Go
    Third and seventh recipe: recipe name truncated

    Recipe name fragmented: <Thai Beef | Marinade>,
    <Cumin Tomato | Sauce>
    but last fragment consists of one word, so function joinAccumRecipeName
    drops it

Seq: 971,  2002-09-29 Article: SHAKEN AND STIRRED; Oh, Behave
    First recipe: <recipe name> text

    The <p> element parsed before the recipe name <p> element contained the
    text 'The house drink at Dos Caminos', which was prepended to accumRecipeName.
    Function joinAccumRecipeName does not drop this text because the last word
    of the last element is not lowercase.

Seq: 974,  2002-09-22 Article: A Mann For All Seasons
    First recipe: missed

    No recipe marker

Seq: 977,  2002-09-18 Article: Astonish the Crowd. Cook a Cucumber.
    Third recipe: text

    Demarcation is endOfRecipe.  The single instruction step is unnumbered
    and contains quantified ingredients.  Function adjustParaText interprets 
    it as an ingredients list preceded by a recipe name.  The only word
    preceding first quantified ingredient is 'In', which is prepended to
    accumRecipeName. The next paragraph examined, the last ingredient,
    ends with terminal puncutation, so the content of accumRecipeName
    is taken as the recipe name.
    
Seq: 982,  2002-09-15 Article: STYLE & ENTERTAINING; Beauty and the Feast
    Fourth recipe: recipe name truncated

    Recipe name fragmented: <Quick | Pickles> but last fragment consists
    of one word, so function joinAccumRecipeName drops it    
 
Seq: 1014,  2002-08-11 Article: FOOD; Lend Me an Ear
    First recipe: <recipe name> '(Courtesy of Martine Garcia)'

    'Courtesy of' should be treated like 'Adapted ...'

Seq: 1045,  2002-07-07 Article: FOOD; Counting Sheep
    Second recipe: false positive

    Article contains 3 recipes, but 4 recipe markers found, erroneously.
    
    Penultimate instruction step of first recipe ends with '(Makes about ...)',
    which is taken erroneously as an endOfRecipe marker by function para. 
    This false recipe marker yields the correct first recipe name.

    The actual recipe marker of the first recipe, 'Yield: ...' erroneously
    yields the ultimate instruction step as the second recipe name.

Seq: 1074,  2002-06-02 Article: SHAKEN AND STIRRED; Curing the Cosmo Blues With a Brand New
    First recipe: empty

    No recipe marker

Seq: 1080,  2002-05-26 Article: GOOD COMPANY; A Birthday Party in a Trailer Park Is Completely Different in Aspen
    First article: <recipe name> text

    Paragraph parsed before the recipe name paragraph is:
    'Recipe by Lisa Bolerjack'
    rather than the usual 'Adapted from ...'.  It was prepended to accumRecipeName
    and included in the recipe name.

Seq: 1087,  2002-05-19 Article: FOOD; The Wild Ones
    First recipe: Recipe Name not found

    Article text has nunmbered list, so instr marker > endOfRecipe marker, but
    no recipe name found for the first instr marker, which was just a numbered
    list in the article text.

Seq: 1095,  2002-05-12 Article: SHAKEN AND STIRRED; A Bolt of Lightning In an Everyday Glass
    First recipe: 'In'

    Demarcation is endOfRecipe. Instructions are in a single unnumbered
    paragraph. Insruction paragraph contains numbered ingredients and functon
    adjustParaText takes it as an ingredients list.  Text preceeding the first
    numbered ingredient is trimmed by the lowercase word check to 'In'.

Seq: 1119,  2002-04-10 Article: A Chef Invents a Lobster Dish, And Pots Start Boiling All Over
    Fourth recipe: missed

    Last recipe has no recipe marker and so was missed.

Seq: 1135,  2002-03-24 Article: Two For The Road
    Third and fourth recipes: Recipe names truncated at last word

    Recipe names are fragmented, but the last fragment is one word, so
    function joinAccumRecipeName discards them.

    Don't discard last single word fragment if all fragments are uppercase?

Seq: 1136,  2002-03-24 Article: The Good Books
    Third recipe: Recipe name truncated at last word

    Recipe names is fragmented, but the last fragment is one word, so
    function joinAccumRecipeName discards it.

    Fragments not uppercase

Seq: 1158,  2002-03-06 Article: Toujours Alabama: A Chef Comes Home
    First recipe name: text <recipe name>

    Paragraph parsed after the recipe name paragraph ends with:
    .' ''

    Function adjustParaText does not detect terminal puncuation, so
    paragraph prpended to accumRecipeName.

Seq: 1185,  2002-02-06 Article: This Time, Chocolate Takes a Powder
    Third recipe: <text fragment> (Heat)

    Demarcation is 'end'. Instruction steps are in an unnumbered paragraph.
    The instructions paragraph has enough numerics to be taken as an 
    ingredients list preceded by text.  The lowercase word check isolates
    the first, capitalized word of the paragraph, which is prepended to
    accumRecipeName.  The next paragraph examined, the last ingredient,
    ends with terminal puncutation, so the contents of accumRecipeName is
    taken as the recipe name.

Seq: 1215,  2001-12-26 Article: A Pot of Fire and Spice For Wall-to-Wall Guests
    First recipe: text

    <p> element containing recipe name was prepended to accumRecipeName.
    Next <p> element parsed contained only the author name.  Function
    adjustParaText removed the author name and returned an empty string.
    Function recipeParse emptied accumRecipeName because function adjustParaText
    returned an empty string.  Parse continues back until a <p> element
    not ending in terminal punctuation was encountered, and that <p>
    element was taken as the recipe name.

Seq: 1221,  2001-12-19 Article: Introduction
    First recipe: <article title>

    Demarcation is instr.  Recipe structure is:

    <text ending with termianal punctuation>
    <recipe name>
    <text ending with termianal punctuation>
    'Recipe'
    <ingredients>
    <instructions>

    Parse procedes through <ingredients> until 'Recipe', which is 
    prepended to accumRecipeName. Next <p> element ends with terminal
    punctuation, which terminates the parse. Function joinAccumRecipeName
    returns 'Recipe' as the recipe name.  Because <recipe name> is 'recipe',
    function recipeParse sets <recipe name> to the article title.

Seq: 1231,  2001-12-09 Article: FOOD DIARY; The Foodie Network
    First recipe: Carrot-and- Fennel Soup

    Fragment title split between 'Carrot-and-' and 'Fennel Soup'
    Function joinAccumRecipeName introduces a space between fragments when
    joining them.  Is it possible to avoid introducing, or eliminate, a 
    blank following a hyphen?

Seq: 1236,  2001-12-02 Article: FOOD; Food, Not 'Tude
    Second recipe: Dried-Fruit-and- Nut Bsteeyas

    Fragment title split between 'Dried-Fruit-and-' and 'Nut Bsteeyas'
    Function joinAccumRecipeName introduces a space between fragments when
    joining them.  Is it possible to avoid introducing, or eliminate, a 
    blank following a hyphen?

Seq: 1244,  2001-11-18 Article: STYLE; Peanut Butter And Jammies
    Article flagged with hasUnquantifiedIngredient

    Second recipe ingredient '1 TV.' prepended to accumRecipeName because
    allCAPS by function recipeParse. When next (preceding) ingredient is 
    parsed, because accumRecipeName is not empty, hasUnquantifiedIngredient
    is set to true.

    Should be 'if (p.allCAPS && !p.isNum)'?

Seq: 1257,  2001-11-04 Article: FASHION HOUSES; Haute Cuisine
    Second recipe: 'Fusilli Primavera' instead of 'Fusilli Primavera With shrimp'

    Fragmented recipe name: [ 'Fusilli Primavera', 'With shrimp' ]
    Function joinAccumRecipeName discarded last fragment because
    "Last word of last element is lowercase"

Seq: 1261,  2001-11-04 Article: INSTANT COMFORT; Rising to the Occasion
    Empty line displayed after each of the two recipes

    Structure for each of two recipes:
        <recipe name>
        <ingredients>
        <instructions>
        <endOfRecipe>
        for the icing:
        <ingredients>
        <instructions>

    Demarcation is 'instr' (4) rather than 'end' (2).  For the 2nd and 4th
    demarcations, the parse procedes through the ingredients, past the 
    'for the icing:' paragraph to the 'Yield:' paragraph of the 1st and
    3rd demarcations. Parse backs up to 'for the icing:' paragraph, which
    is adjusted to an empty string that is taken as the 2nd and 4th recipe
    name.

Seq: 1265,  2001-11-04 Article: FASHION PLATES; The China Monologue
    First recipe: <article name>

    Recipe name paragraph is:
    Roasted Peaches(Adapted from Kim Moss, Pecos Bar and Grill, Pecos, N.M.)

    Function adjustParaText moves the terminal punctuation outside the parenthetical
    phrase. Function recipeParse skips the recipe name paragraph because of
    the terminal punctuation, and the parse reaches the beginning of the
    article without finding a recipe name.

Seq: 1294,  2001-09-26 Article: BY THE BOOK; An Old-World Explorer
    Both recipes: Recipe name truncated because of 'FROM'

    Function adjustParaText truncates paragraph at 'from'.

    Not if 'from' is allCAPS?

Seq: 1327,  2001-08-15 Article: Spooning Up a Cloud
    Third recipe: <instruction step>

    The article has 4 recipes, but the parse expected 5.  
    
    Demarcation is 'end'.  The first instruction step of the second
    recipe contains '(Makes about 1 1/2 cups.)', which is taken as an
    endOfRecipe marker.  This results in the subsequent instruction step
    of the second recipe being taken as the (spurious) third recipe.

Seq: 1334,  2001-08-05 Article: FOOD; Hold Fire
    First recipe: Recipe Name not found

    Article text includes a numbered list, which was parsed as a 
    (spurious) recipe.

Seq: 1337,  2001-08-01 Article: Keeping a Treasure Close to Home
    Second recipe: <instruction step>

    The article has 1 recipe, but the parse expected 2.

    Demarcation is 'end'.  The first instruction step of the first (only)
    recipe contains '(Makes 2 cups. â€¦)', which is taken as an
    endOfRecipe marker.  This results in the subsequent instruction step
    of the first (only) recipe being taken as the (spurious) second recipe.

Seq: 1381,  2001-06-03 Article: FOOD; Shut Up And Munch
    Recipe Name not found

    Article contains 4 recipes, each in one paragraph, which comprises a
    recipe name and instructions naming ingredients and, in one case an
    endOfRecipe marker.

Seq: 1397,  2001-05-13 Article: Food Diary; The First Supper
    First recipe: 'Recipes' <recipe name>

    A paragraph containing the word 'Recipes' precedes the paragrapgh
    containing the first recipe name.

    Usually, in this case, the word preceding the recipe name is 'RECIPES'
    and is handled in the check for allCAPS.

    The case-insensitive check for a paragraph containing only the word
    'recipes' should occur in the function joinAccumRecipeName.

Seq: 1407,  2001-04-29 Article: Feed your head
    First recipe: <recipe name> text

    For some unknown reason, a <p> element containing 'Yesterday's New York Times'
    appears between the ingredients list and the recipe name.  It was 
    prepended to accumRecipeName and included in the repored recipe name.

Seq: 1409,  2001-04-29 Article: FOOTNOTES
    First recipe: Recipe Name not found

    Article text includes a numbered list, which is parsed as instruction 
    steps, but there is no associated recipe name.

Seq: 1410,  2001-04-29 Article: POPCORN; Starving Actors
    First recipe: Should 'CARE TO DINE Ã€ LA BURTONS?' be part of the 
    recipe name?

    Second recipe: missed

    No recipe markers

Seq: 1419,  2001-04-18 Article: When a Sweet Nothing Becomes Really Something

    Last recipe: Spurious
    'HOW TO FOLD A NAPKIN INTO A JEWEL BOX' followed by a numbererd list

Seq: 1426,  2001-04-11 Article: THE MINIMALIST; A Dish With a Hot Temper Attains a Milder Manner
    First recipe: hasUnquantifiedIngredient missed

    Demarcation is 'instr'.  First ingredient parsed:
    '12 to 16 scallions, cut into 2-inch lengths.' 
    was treated as an ingredient list because of multiple numerics, but was 
    not recognized as an ingredient. The next ingredient parsed:
    'Salt and freshly ground black pepper' did not set hasUnquantifiedIngredient
    because the previous paragraph was not recognized as a numbered ingredient.

Seq: 1446,  2001-03-18 Article: Pot Luck; Feed Thy Neighbor
    First recipe: Recipe Name not found

    Dearcation is 'instr'.
    
    Recipe name not recognized because it is embedded in a paragraph that 
    starts with text and is followed by an ingredients list. 

    Second recipe: text <recipe name> <ingredients list>

    Recipe name embedded in a paragraph that starts with text and is
    followed by an ingredients list. Parsed skips this, but later backs up
    and takes this paragraph as the recipe name.

Seq: 1466,  2001-02-28 Article: At Long Last, New York Is Ready for Ethiopia
    First recipe: <text>

    Recipe name prepended to accumRecipeName.  Next <p> element parsed contained
    only the author's name.  Function adjustParaText removes the author's name
    and returns an empty string, which resets accumRecipeName.  The parse
    continues until a text paragraph is taken as the recipe name.

Seq: 1474,  2001-02-18 Article: Food; Ostrich: The Movie
    First recipe: text <recipe name>

    The parse correctly prepends the recipe name to accumRecipeName, but the 
    next 2 <p> elements parsed contain uppercase text, and that text is also 
    prepended to accumRecipeName.

Seq: 1489,  2001-02-04 Article: Food; Fish Out of Water
    First recipe: Recipe Name not found

    Recipe has no numbered ingredients, so ingredients not found, and parse
    discards all paragraphs back to the beginning of the article.

Seq: 1529,  2000-12-27 Article: THE CHEF; Seasoning for the Season: Caviar, Beyond the Spoon
    Last recipe: <ingredient>

    Penultimate ingredient is unquantified and so is prepended to accumRecipeName.  The
    next <p> element parsed is a numbered ingredient that has terminal puntuation. Function
    recipeParse takes the contents of accumRecipeName as the recipe name because of
    "terminal punct & accumRecipeName not empty".

    Condition this on isNum?

Seq: 1535,  2000-12-20 Article: Print the Recipes
    Second recipe: missed

    Demarcation is 'instr'.  The second recipe has no numbered instruction steps.

    Third, fourth and fifth recipes: <recipe name> unumbered ingredient

    Function joinAccumRecipeName entered with an array of 3 elements:
        <recipe name>
        <unnumbered ingredient>
        <unnumbered ingredient>

    Last element is discarded because "Last word of last element is lowercase, last element deleted".
    Repeat that test?

Seq: 1538,  2000-12-20 Article: 'Stew' in a Crust
    First recipe: <ingredient>

    Recipe name should be the article name, but the <p> element preceding the ingredients
    list is 'Recipe Makes ... .' 

    Terminal punctuation ends the parse, accumRecipeName contains 2 unnumbered ingredients,
    function joinAccumRecipeName discards the second ingredient because of lowerecase, and
    the first ingredient is taken as the recipe name.

Seq: 1542,  2000-12-17 Article: Food; Plaen and Fancy
    First recipe: <recipe name><For the ...><ingredients>

    The recipe name paragraph also contains a 'For the ...:' phrase and an ingredients
    list. The previous paragraph parsed also contained a 'For the ...:' phrase and an 
    ingredients list.  Because ingredients were found in the previous paragraph, the 
    recipe name paragraph was not checked for ingredients or  'For the ...:' phrases.  The 
    whole paragraph was taken as the recipe name.

Seq: 1549,  2000-12-10 Article: Food; Grecian Formula
    First recipe: <recipe name> text

    Between  the recipe name paragraph and the ingredients list are 2 allCAPS paragraphs
    that were prepended to accumRecipeName and included in the recipe name.

    Second recipe: recipe name truncated

    Recipe name 'Veal-and-Vegetable Stew From Corfu' was truncated at 'From' by
    function adjustParaText.

Seq: 1573,  2000-11-19 Article: Food; Quirky Turkey
    First recipe: Recipe Name not found

    Article text contains a numbered list, which is taken as a (spurious) recipe.

    Second recipe: text <recipe name>

    Three paragraphs, parsed after the recipe name paragraph, do not end with terminal
    punctuation, and are prepended to accumRecipeName.

Seq: 1575,  2000-11-15 Article: Print the Recipes
    Third recipe: Not really a recipe

Seq: 1594,  2000-11-05 Article: Potables; Olive or Twist
    Seventh recipe: text

    Demarcation is 'end'.  Instructions are in one unnumbered paragraph, and instructions 
    inlude numbered ingredients.  That paragraph was taken as an ingredients list, and
    the text preceding the the first numbered ingredient was prepended to accumRecipeName.
    The next paragraph parsed was an ingredient that ended with terminal punctuation.
    The terminal punct ended the parse, and the contents of accumRecipeName was taken as
    the recipe name.

Seq: 1596,  2000-11-05 Article: Maguy by the Sea
    First recipe: Recipe Name not found

    Demarcation is 'end'. The article text preceding the actual first includes the phrase
    "How She Serves: ", which was taken as an endOfRecipe marker (via endOfRecipeRX).  
    This spurious marker had no associated recipe name

Seq: 1599,  2000-11-05 Article: Footnotes
    First recipe: Recipe Name not found

    Article text comprises a numbered list. Since the demarcation is 'instr', the article text
    is parsed, and no recipe name was found.

Seq: 1626,  2000-10-11 Article: Tomato Coulis and Tomato Mint Soup
    Second recipe: <recipe name> unumbered ingredient

    Function joinAccumRecipeName entered with an array of 3 elements:
        <recipe name>
        <unnumbered ingredient>
        <unnumbered ingredient>

    Last element is discarded because "Last word of last element is lowercase, last element deleted".
    Repeat that test?

Seq: 1627,  2000-10-11 Article: Tomato Concasse and Tomato Parsley Salad
    Second recipe: <article title>

    CWTT article. Demarcation is 'instr'. Two recipes.  Both prefiaced with 'Recipe'.
    First recipe has no <recipe name> paragraph so it properly takes article title as its
    recipe name.

    Second recipe structure:

    <recipe name>
    <text><terminal punctuation>
    'Recipe'
    <instruction step>

    'Recipe' prepended to accumRecipeName.  Paragraph with terminal punt ends the parse
    and 'Recipe' as the recipe name causes a walk back to the article title.

Seq: 1647,  2000-09-24 Article: Food; A Taste for Seduction
    First recipe: Recipe Name not found

    Article contains a numbered list in its introductory text, which is
    interpreted as a recipe.

Seq: 1713,  2000-07-30 Article: Food; An Herbal Life
    First recipe: text <recipe name>

    Recipe name is prepended to accumRecipeName.  The next paragraph parsed does not end
    with terminal puncutation.  This paragraph is truncated "adapted from", and the remaining
    text is prepended to accumRecipeName. The next paragraph ends with terminal puncuation,
    ending the parse, and the contents of accumRecipeName is taken as the recipe name.

Seq: 1720,  2000-07-19 Article: Print the Recipes
    First recipe: <recipe name> text
    Second recipe: spurious

    Article structure:
        <recipe name>
        'The Fish'
        <ingredients list>
        <instruction steps>

        'The Dressing'
        <ingredients list>
        <instruction steps>

        'Carving and Serving Instructions'
        <numbered list>

    If the phrases 'The Fish' and 'The Dressing' were proceeded by 'For the', only the
    <recipe name> would have been reported.

    Third recipe: spurious

        Numbered list follows the recipe.

Seq: 1721,  2000-07-19 Article: Lemon Olive Oil Dressing
    First recipe: text

    Article structure:

        text with terminal punctuation
        'Recipe: The Dressing'
        <unnumbered ingredient>
        <ingredients list>

    Demarcation is 'instr'. Parse prepends <unnumbered ingredient> to accumRecipeName.
    Parse removes 'Recipe:' from the next paragraph and prepends 'The Dressing' to
    accumRecipeName. The next paragraph parsed ends with terminal punctuation, and because
    accumRecipeName is not empty, the parse ends. The second element of accumRecipeName
    is discard because its last word is lowercase, and the first element (The Dressing) is 
    taken as the recipe name, instead of the article title, which is the actual recipe name.

Seq: 1723,  2000-07-19 Article: The Stuffed Version
    Second recipe: spurious

    Demarcation is 'instr'. Numbered list follows the single recipe.

Seq: 1736,  2000-07-09 Article: Food; Letting Off Steam
    First recipe: Recipe Name not found

    Demarcation is 'instr'. Article text includes a numbered list, which is taken as a recipe.

Seq: 1755,  2000-06-21 Article: Print the Recipes
    First recipe: <recipe name> text
    Second recipe: spurious

    Article structure:
        <recipe name>
        'The Fish'
        <ingredients list>
        <instruction steps>

        'The Dressing'
        <ingredients list>
        <instruction steps>

        'Carving and Serving Instructions'
        <numbered list>

    If the phrases 'The Fish' and 'The Dressing' were proceeded by 'For the', only the
    <recipe name> would have been reported.

    Third recipe: spurious

        Numbered list follows the recipe.

Seq: 1756,  2000-06-21 Article: Lemon Olive Oil Dressing
    First recipe: text

    Article structure:

        text with terminal punctuation
        'Recipe: The Dressing'
        <unnumbered ingredient>
        <ingredients list>

    Demarcation is 'instr'. Parse prepends <unnumbered ingredient> to accumRecipeName.
    Parse removes 'Recipe:' from the next paragraph and prepends 'The Dressing' to
    accumRecipeName. The next paragraph parsed ends with terminal punctuation, and because
    accumRecipeName is not empty, the parse ends. The second element of accumRecipeName
    is discard because its last word is lowercase, and the first element (The Dressing) is 
    taken as the recipe name, instead of the article title, which is the actual recipe name.

Seq: 1773,  2000-06-07 Article: Bartender, Bring Me Provence
    Fourth recipe: spurious

    Article contains 4 recipes, but 5 recipe markers found, erroneously.
    
    Penultimate instruction step of third recipe ends with '(Makes about ...)',
    which is taken erroneously as an endOfRecipe marker by function para. 
    This false recipe marker yields the correct third recipe name.

    The actual recipe marker of the third recipe, 'Yield: ...' erroneously
    yields the ultimate instruction step as the spurious fourth recipe name.

Seq: 1799,  2000-05-10 Article: Vinaigrette Foundations
    Third recipe: <ingredient>

    A paragraph of text, ending with terminal punctuation, appears between the ingradients
    list and the recipe name.  The first ingredient is unnumbered and so is prepended
    to accumRecipeName.  The text paragraph ends the parse, and the first ingredient is
    taken as the recipe name.

Seq: 1812,  2000-04-30 Article: Food; Rules of The Game
    Last (fifth) recipe: missing

    Demarcation is 'instr'. Last recipe has no recipe markers.

Seq: 1824,  2000-04-19 Article: A Springtime Rite Worth a Year's Wait
    First recipe: text <recipe name>

    The recipe name was prepended to accumRecipeName.  The next paragraph parsed ended
    with `.' "`

    Because there is a space between the apostrophe and the quote, function adjustParaText
    does not expose the terminal punctuation, and the paragraph is prepended to accumRecipeName.

    The next paragraph parsed ends with terminal punctuation, ending the parse. Both elements
    in accumRecipeName are taken as the recipe name.

Seq: 1843,  2000-04-05 Article: Marinade
    First recipe: text

    The paragraph preceding the first ingredient has 'Recipe: The Marinade'. Function
    recipeParse strips 'Recipe:' and takes 'The Marinade' as the recipe title.  But the 
    article title 'Marinade' is preferred.

Seq: 1844,  2000-04-05 Article: Duck Breast
    First recipe: text

    The paragraph preceding the first ingredient has 'Recipe: Cooking the Duck Breast'. 
    Function recipeParse strips 'Recipe:' and takes 'The Marinade' as the recipe title.  
    But the article title 'Duck Breast' is preferred.

Seq: 1863,  2000-03-15 Article: THE MINIMALIST; A Surprise Candidate For Roasting
    First recipe: hasUnquantifiedIngredient missed

    First ingredient parsed (last ingredient) not recognized as a numbered ingredient:
    '1 3- to 4-pound boned lamb shoulder, trimmed of surface fat.'

        Ingredients match result: 1 3- to ,4-pound 
        Para contains ingredients
        Ingredient match: 4-pound  includes UOM: pound
        Number of ingredient matches: 2
        Number of matches including a measure: 1
        Half or so: 2

Seq: 1866,  2000-03-15 Article: THE CHEF; Minute Risotto (Almost)
    Third recipe: spurious

    Demarcation is 'end'. The article has 2 recipes, but the second recipe's first
    instruction step end with 'Makes about 2 cups.'. This is taken as an endOfRecipe
    marker (spurious).

    The parse starting at the spurious endOfRecipe marker finds the second recipe name.
    The parse starting at the actual endOfRecipe marker of the second recipe (Yield: 3 to 4 servings...)
    reaches the spurious endOfRecipe marker and backs up to the second recipe's second
    instruction step, which is taken as the (spurious) third recipe name.

Seq: 1878,  2000-03-01 Article: GruyÃ¨re Omelet
    First recipe: text

    Demarcation is 'servesMakes'.  First paragraph parsed is 'The Recipe', which is prepended
    to accumRecipeName. The next paragraph parsed ends with terminal punctuation, terminating
    the parse.  'The Recipe' is taken as the recipe name, but the actual recipe name is the
    article title.

    Do not prepended 'The Recipe'?

Seq: 1879,  2000-03-01 Article: Filled Omelet
    First recipe: text

    Demarcation is 'servesMakes'.  First paragraph parsed is 'The Recipe', which is prepended
    to accumRecipeName. The next paragraph parsed ends with terminal punctuation, terminating
    the parse.  'The Recipe' is taken as the recipe name, but the actual recipe name is the
    article title.

    Do not prepended 'The Recipe'?

Seq: 1963,  1999-04-11 Article: Food; Greek Fire
    Last recipe: Recipe name incomplete

    Function joinAccumRecipeName entered with -
        [ 'Psari Mayoneza', '(Fish With', 'Mayonnaise)' ]
    Last element of accumRecipeName dropped because lastAccumElementWords == 1

Seq: 1966,  1999-04-07 Article: THE CHEF
    hasUnquantifiedIngredient true, erroneously

    First recipe: 'For the _' phrases in the ingredients list lack a terminal colon.  They
    are therefore taken as unnumbered ingredients.

Seq: 1990,  1999-03-17 Article: THE MINIMALIST; The Tortilla As Omelet
    First recipe: hasUnquantifiedIngredient missed

    Demarcation is 'instr'.  First ingredient parsed ends with terminal punctuation and
    so is skipped.  The next ingredient is unnumbered, but because ingredients were not
    previously found, the unnumbered ingredient is not prepended to joinAccumRecipeName,
    and therefore in can't be recognized as an unnumbered ingredient.

Seq: 2020,  1999-02-17 Article: Magic Potions That Stir Food To Life
    First recipe: missed

    Demarcation is 'instr'.  The first recipe's instruction steps did not include A
    space after the instr marker, and so was not recognized as an instruction step.

    Second and third reported recipes: spurious

    Embedded in the recipes are two numbered lists, which are taken as recipes.

Seq: 2037,  1999-01-31 Article: FOOD; Love Me Tender
    First recipe: missed

    No recipe marker

Seq: 2056,  1999-01-13 Article: Where Indulgence Grows on Trees
    First recipe: hasUnquantifiedIngredient missed

    Demarcation is 'instr'.  First ingredient parsed ends with terminal punctuation and
    so is skipped.  The next ingredient is unnumbered, but because ingredients were not
    previously found, the unnumbered ingredient is not prepended to joinAccumRecipeName,
    and therefore in can't be recognized as an unnumbered ingredient.


