---------------
NYTCooking search issues:

NYTCooking search results pages have been changed - arbitrary character strings are 
appended to class names






---------------
with-getA issues:

  lastStoredDate should be incremented after retrieval. dateToSearch should be set globally.

  When saving an article, the contents of the <div> element whose id is the article's 
   sequence number should be emptied (child elements removed), so that the article-title, 
   recipe-list and recipe-name templates can be appended to it.

  In index.js, keep article HTML in an global scope object with seq number as key. In
    ipcMain.handle('save-article'), get article HTML from the global scope object.

-----------------
with-getA, NYTCooking issues:

  author search results are unstable - duplicates and missed recipes
    Try searching for <author> <recipe name>

----------------
General issues:

The titleMatch processing in adjustTitle (lib.js) needs review.  The wild population of titles
 should be inventoried.

For fuzzy matches, verify that the target author is included and all or most nouns are present

For exact matches, verify that Featured Article matches

In lib.js, function adjustParaText, can 'adapted' be handled in one place?
    Is there a better way to count the ingredient units of measure in the
    ingredient match results?

In lib.js, can the check for Serves and Makes be made case-insensitive?

In lib.js, adjustParaText() - ( still? ) When an ingredients list is sliced
    from a paragraph, if the first ingredient is unquantified, that
    ingredient will be left behind and will be included in the recipe name.

In lib.js, function adjustParaText,

    The following attribution check code solves this article [seq 156], but breaks
    many other articles that have a recipe name paragraph followed by
    an ingredients list paragraph that starts with an unquantified 
    ingredient, which is appended to the recipe name.

    if (paraText.length > 0) {
      // If, after slicing off the ingredients list, the paragraph
      //  text is not empty, the paragraph may contain the recipe
      //  name.
      // Check the paragraph text for the case-insensitive phrases
      //  'total time:', 'time:', 'adapted', or 'from'.
      let attribution = paraText.match(/(total )*(time:)|(adapted)|(from)/i)
      if (attribution != null) {
        // If the paragraph text does contain one of those phrases,
        //  then discard the that starts with that phrase and
        //  return only the text that preceeds that phrase.
        paraText = paraText.substring(0, attribution.index)
        console.log("(ingredients found) Paragraph text trimmed at '" + attribution[0])
      }
    }

    This code can be used if the unquantified first ingredient problem is
    solved.

    But seq 156 was fixed by the uncapitalized word check, so this is probably obsolete.

    - Seq: 1824,  2000-04-19 Article: A Springtime Rite Worth a Year's Wait

      let punctChars = paraText.match(/([\.\?\!]{1})([\'\"\)]{1,3})$/); 

      Try:
      let punctChars = paraText.match(/([\.\?!]{1})('|"|\)|'"|' ")$/);

index.js should incorporate elements of getArticle.js for each article:
  - The <small> list of discovered recipes should be a textArea.
  - The attributes checkboxes should be displayed
  - The article should be stored in the articles table of the NYTarticles database

In function processSectionOrKeywords:
  There seems to be a problem getting the complete section/keyword search results by clicking 'More'
   buttons. Waiting a quarter second for the search results number to change? 

Sometimes, the section and keyword ssearches turn up the same article with 
  different URLs. It's not desirable to store a duplicate article, but if 
  the duplicate article is the last displayed article, not saving it means
  lastDate.txt will not be saved.

-----------------------------------------------------------
getArticles issues:

'Save and Quit' button does not update startObj.txt

Duplicate rows:
  244, 245
  231, 232

On 'No more years', clear window.

-----------------------------------------------------------
validate issues:

<div class='loading'> should be replaced by a progress bar